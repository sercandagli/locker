@page
@using Locker
@using Locker.Entities
@using Locker.Enums
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model CourierOrdersModel
@Html.AntiForgeryToken()

<div class="container-xxl flex-grow-1 container-p-y">
    <div class="alert alert-success courierAlert alert-dismissible" role="alert" style="display:none">
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
    <div class="card">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h5 class="card-header">Siparişlerim (@Model.Orders.Count) Teslim Al (@Model.TakeCount) - Teslim Et(@Model.SaveCount)</h5>

            <a href="courierOrders">
                <button class="btn btn-dark">Filtreleri Temizle</button>

            </a>
            <a href="courierOrders?isTransfer=1">
                <button class="btn btn-dark">Transfer Siparişler</button>

            </a>
            <button class="btn btn-dark complete-transfers">Transferleri Tamamla</button>

        </div>
        <div class="col-xxl filter">
            <div class="card mb-4">
                <div class="card-body">
                    <div class="demo-inline-spacing">
                        <div class="btn-group" role="group">
                            &nbsp;
                            <div class="mb-3">

                                <select class="form-control cabine-select" name="cabineId">
                                    <option value="0">Kargomat</option>
                                    @foreach (var i in Model.Cabines)
                                    {
                                        <option class="dropdown-item" href="javascript:void(0);" value="@i.Id">@i.Name</option>
                                    }
                                </select>
                                &nbsp;
                            </div>
                            &nbsp;
                            <div class="mb-3">
                                @using (Html.BeginForm(FormMethod.Get))
                                {
                                    <div class="btn-group" role="group">
                                        <div class="mb-3">
                                            <select class="form-control " name="deliveryAddressType">
                                                <option value="1">Adresten Al</option>
                                                <option value="2">Adrese Teslim</option>

                                            </select>
                                            &nbsp;
                                        </div>
                                        &nbsp;
                                        <div class="mb-3">
                                            <select class="form-control " name="regionId">
                                                @foreach (var i in Model.Regions)
                                                {
                                                    <option class="dropdown-item" href="javascript:void(0);" value="@i.Id">@i.Name</option>
                                                }
                                            </select>
                                            &nbsp;
                                        </div>
                                        &nbsp;
                                        <div class="mb-3">
                                            <input type="text" class="form-control" id="basic-default-name" name="orderId" placeholder="Takip Numarası">

                                        </div>
                                        &nbsp;

                                        <div class="mb-3">
                                            <button type="submit" class="btn btn-outline-secondary"> Ara </button>

                                        </div>
                                    </div>
                                }
                            </div>
                        </div>


                    </div>

                </div>
            </div>
        </div>


        <div class="table-responsive text-nowrap">
            <table class="table table-striped">
                <thead>
                <tr>
                    <th>
                        <input class="form-check-input" type="checkbox" value="" id="select-all">
                    </th>
                    <th>Sipariş Numarası</th>
                    <th>Gönderim Tipi</th>
                    <th>Teslim Alınacak</th>
                    <th>Teslim Edilecek</th>

                    <th>Durum</th>
                    <th>Oluşma Tarihi</th>
                    <th>#</th>
                </tr>
                </thead>
                <tbody class="table-border-bottom-0">
                @foreach (var order in Model.Orders)
                {
                    Cabine cabine = null;
                    var item = order.OrderItems.FirstOrDefault();
                    <tr>
                        <td>
                            <input class="form-check-input order-select" type="checkbox" value="@order.Id">
                        </td>
                        <td>#@order.Id</td>
                        <td>@order.DeliveryType.GetDeliveryType()</td>

                        <td>
                            @if (order.DeliveryType == (int)DeliveryType.LockerToAddress || order.DeliveryType == (int)DeliveryType.LockerToLocker)
                            {
                                <strong>@Model.Cabines.FirstOrDefault(x => x.Id == order.OrderItems.FirstOrDefault().SourceLockerId).Name</strong>
                            }
                            else if (order.DeliveryType == (int)DeliveryType.AddressToAddress || order.DeliveryType == (int)DeliveryType.AddressToLocker)
                            {
                                <strong>@Model.Regions.FirstOrDefault(x => x.Id == order.SourceRegionId)?.Name</strong>
                            }

                        </td>
                        <td>
                            @if (order.DeliveryType == (int)DeliveryType.LockerToAddress || order.DeliveryType == (int)DeliveryType.AddressToAddress)
                            {
                                <strong>@Model.Regions.FirstOrDefault(x => x.Id == order.TargetRegionId)?.Name</strong>
                            }
                            else if (order.DeliveryType == (int)DeliveryType.AddressToLocker || order.DeliveryType == (int)DeliveryType.LockerToLocker)
                            {
                                <strong>@Model.Cabines.FirstOrDefault(x => x.Id == order.OrderItems.FirstOrDefault().TargetLockerId)?.Name</strong>
                            }
                        </td>

                        <td>@Html.Raw(item.Status.GetCourierOrderStatus(order.DeliveryType))</td>
                        <td>@order.CreatedOn</td>
                        <td>
                            <div class="demo-inline-spacing">
                                @if (order.Status != (int)OrderStatus.Completed)
                                {
                                    <a href="courierOrderDetail?id=@order.Id">
                                        <button type="button" class="btn btn-outline-primary">Detay</button>
                                    </a>
                                }

                            </div>
                            @if (order.IsTransferred && order.IsTransferCompleted)
                            {
                                <span class="badge bg-label-dark">Transfer Tamamlandı</span>
                            }
                            else if (order.IsTransferred)
                            {
                                <span class="badge bg-label-danger">Transfer</span>
                            }
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    </div>
</div>
<div class="modal fade" id="deliveryModal" tabindex="-1" style="display: none;" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <label class="oid-hidden fade"></label>
                <h5 class="modal-title" id="deliveryModalTitle">Siparişi teslim etmek istediğinize eminmisiniz?</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal"> İptal </button>
                <button type="button" class="btn btn-primary setDeliveryButton">Kaydet</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="deliveryModalWithOtp" tabindex="-1" style="display: none;" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deliveryModalTitle">Lütfen 4 haneli teslimat kodunu giriniz</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col mb-3">
                        <label for="nameBasic" class="form-label">4 Haneli Kod</label>
                        <input type="text" id="otpCode" class="form-control" placeholder="OTP">
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal"> İptal </button>
                <button type="button" class="btn btn-primary setDeliveryButton">Kaydet</button>
            </div>
        </div>
    </div>
</div>

<script>
    $("#select-all").on("click",function (){
        var selects = $(".order-select");
        var param = false;
        if ($(this).prop("checked")){
            param = true;
        }
        for (var i = 0; i < selects.length;i++){
            $(selects[i]).prop("checked",param);
        }
    });
    $(".cabine-select").on("change", function (){
        var cabine = $(this).val();
        window.location = "courierOrders?cabineId=" + cabine;
    });
    
    $(".complete-transfers").on("click", function (){
        var datas = $(".order-select:checked");
        var idArray = [];

        for (var i =0; i < datas.length; i++){
            idArray.push($(datas[i]).val());
        }

        $.ajax({
            type: "POST",
            url: "/CourierOrders?Handler=CompleteTransfers",
            headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
            data:{"orderIds":idArray},
            success: function (result) {
                location.reload();
            },
            failure: function (response) {

            }
        });

    });
    
</script>